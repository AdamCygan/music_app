{
  "swagger": "2.0",
  "info": {
    "title": "Your API",
    "version": "1.0.0"
  },
  "paths": {
    "/albums": {
      "post": {
        "summary": "Create a new album.",
        "description": "Create a new album in the database.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "JSON data for creating a new album",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAlbumData"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Album created successfully.",
            "schema": {
              "$ref": "#/definitions/Album"
            }
          },
          "400": {
            "description": "Invalid request data."
          }
        }
      },
      "get": {
        "summary": "Get all albums.",
        "description": "Retrieve details of all albums in the database.",
        "responses": {
          "200": {
            "description": "List of albums.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Album"
              }
            }
          }
        }
      }
    },
    "/albums/{album_id}": {
      "put": {
        "summary": "Update an existing album by ID.",
        "description": "Update an existing album in the database by providing an AlbumID.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "album_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "AlbumID of the desired album."
          },
          {
            "name": "body",
            "in": "body",
            "description": "JSON data for updating an existing album",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAlbumData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Album updated successfully.",
            "schema": {
              "$ref": "#/definitions/Album"
            }
          },
          "404": {
            "description": "Album not found."
          }
        }
      },
      "get": {
        "summary": "Get album by ID.",
        "description": "Retrieve album details by providing an AlbumID.",
        "parameters": [
          {
            "name": "album_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "AlbumID of the desired album."
          }
        ],
        "responses": {
          "200": {
            "description": "Album data.",
            "schema": {
              "$ref": "#/definitions/Album"
            }
          },
          "404": {
            "description": "Album not found."
          }
        }
      }
    }
  },
  "definitions": {
    "CreateAlbumData": {
      "type": "object",
      "properties": {
        "Title": {
          "type": "string"
        },
        "PublishingDate": {
          "type": "string"
        },
        "ArtistID": {
          "type": "integer"
        },
        "GenreID": {
          "type": "integer"
        }
      }
    },
    "UpdateAlbumData": {
      "type": "object",
      "properties": {
        "Title": {
          "type": "string"
        },
        "PublishingDate": {
          "type": "string"
        },
        "ArtistID": {
          "type": "integer"
        },
        "GenreID": {
          "type": "integer"
        }
      }
    },
    "Album": {
      "type": "object",
      "properties": {
        "AlbumID": {
          "type": "integer"
        },
        "Title": {
          "type": "string"
        },
        "PublishingDate": {
          "type": "string"
        },
        "ArtistID": {
          "type": "integer"
        },
        "GenreID": {
          "type": "integer"
        }
      }
    }
  }
}
